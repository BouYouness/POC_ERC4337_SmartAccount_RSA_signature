import { ethers } from "hardhat";

async function main() {
  //const [deployer] = await ethers.getSigners();

  const RSAVerifier = await ethers.getContractFactory("RSAVerifier");
  const verifier = await RSAVerifier.deploy();
  await verifier.waitForDeployment();
  console.log("Verifier deployed to:", await verifier.getAddress());

  // values generated by generateRSA script
  const signature = "0x7dcf1375b77def259d833ad956a68133b4519adeeb0965747ffdd9d6d298d84ddc76669dd190616dcb6d17323da418de3809b2c7d4b9f9edfe6dd0f217b0d53193dec5d1425d3636be0f74d3e514b05541a7c5dabb461b6830bd774b02e705fad4997f30fb7f361c04fa5119dadf3836d7f04a6f6aa898dfebea43ba373c769110e447d9202eed53a5f3f24b7d42f9e6b651425c47e3c6f6aec8b57e59c8bf452691352e4d184dacc1ae3c53759d4163b2643d76a2e33a2652f7bef204c90c914c02974b7b7a43997fffe6ca256c82ca2f6be28c5f58d29bb2eeffac86245aea1976ad52c1d9f3babeda91f0cb97eab91458909d28d3ed16055f1f31232ad974"; 
  const exponent = "0x010001"; // 65537 in hex
  const modulus = "0x00c5b0fbb071ec5ab650b6c737bc0f50d00547f87c4d81c9c70d3ed2d01aede482d54d68e2fc8cd83d4049bde77e0efa0661caa8aac69611663909dc98284eee0d16dbbd21ee09258efc49626aac1d2026a3d0919a02840a7c94f28ca9f6e98c3033c53c2f5043de29747435b922041d0648076edf1a504511d92898d283fdde01a97e44f2d7ef3b03b8446f8dc780f8821098670d171e077f21a6ca68c7f857b7d4d5b81b16191d07e1b0ff6b0dc5d557038cc17dbe99a1cdd88d24df38642967c5b1103ba71a0bf20b6bf4b79193e7b3b6b9be34b88c852848da5aa22d8609610a3451ba09fc96fb544a2435e0cc7d44282e0512b3c6476a3cbcacf06788d2b1";
  // Hash of original message
  const expectedHash = "0x5c1108d5683e2208157064ccaff19687daa70cd76f060200173efad94af6407b";

  const result: boolean = await verifier.verifyRSA(signature, expectedHash, modulus, exponent);
  console.log("Verification result:", result);
}

main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
