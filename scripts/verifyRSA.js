const hre = require("hardhat");

async function main() {
  //const [deployer] = await hre.ethers.getSigners();

  const RSAVerifier = await hre.ethers.getContractFactory("RSAVerifier");
  const verifier = await RSAVerifier.deploy();
  await verifier.waitForDeployment();
  console.log("Verifier deployed to:", await verifier.getAddress());

  // Example values generated by generate_rsa_values script
  const signature = "0x366d21db344f98367d37287cdaa5e332860e288b1ea964e37c73b8638897d48caad762a6e49854c7ad81c29cf01ab2597ed40c28fbaff142f997d2fa9b722dcf69a0d09663ac6e6b287169767c62df4c1ec3af5adb396db2cb54de3a274c0152601d85d78e0c55ddd7c62eb5537c3a0c07d19e922ea9cd34d5bce6eeeacd87857d94dc66d43fe4ac0ba299e2f2f06f95e7555610153dc1b8971cebb6115dd9321137afba02056ba44fd0e89a7230fca117344f9ce5ebf5c3c72f00655ed044cc0982d9442af173c709b828f07e5abd446ada385f049ea1b039521f725803046d494ba17017300ffa13a4872e588a38cd44e37981b44fcab91a5398bc37d24266";
  const exponent = "0x010001"; //65537
  const modulus = "0x00c3372ea72b5da91c7de8824566a905063c8362e889ed68b73ff05aae5e585292f10b4f4af330de8de732bc10503ab5b6e1f846708d2609effdff81714670f39a450163af57a2691321df7628b77e6a045eb8e688716771ebce673e34552d110b1ca41513b8bdd196b4ab17d973efb032137dabd2a8987b9d3f0e1357667f63ec7eab0a7bf132e0c3b5107c2e996f7e72d5adfbdeab8b060984c45f5a991076407f15ac66a54ca595e6b14580685a55c2fdb9101f6033f147f0dd267dbe9ef4ef7820df046afddcef5da157134718d06e4bb4a7776849848afacb36149fed99598610d7107b8adb71f0f9486da88675bb1fc25fefc90e98e41d30c540c9688c69"; 
  const expectedHash = "0x42d32d1d05bd9ee803e9ad15fbbfeb9aa2eab9cf6a7e785791e95da18817aeb1"; // Hash of original message 

  const result = await verifier.verifyRSA(signature, exponent, modulus, expectedHash);
  console.log("signature valid?", result);
}

main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});

